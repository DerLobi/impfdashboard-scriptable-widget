{"version":3,"file":"vega-force.min.js","sources":["../../../node_modules/d3-quadtree/src/add.js","../../../node_modules/d3-quadtree/src/quad.js","../../../node_modules/d3-quadtree/src/x.js","../../../node_modules/d3-quadtree/src/y.js","../../../node_modules/d3-quadtree/src/quadtree.js","../../../node_modules/d3-force/src/constant.js","../../../node_modules/d3-force/src/jiggle.js","../../../node_modules/d3-force/src/collide.js","../../../node_modules/d3-force/src/link.js","../../../node_modules/d3-quadtree/src/cover.js","../../../node_modules/d3-quadtree/src/data.js","../../../node_modules/d3-quadtree/src/extent.js","../../../node_modules/d3-quadtree/src/find.js","../../../node_modules/d3-quadtree/src/remove.js","../../../node_modules/d3-quadtree/src/root.js","../../../node_modules/d3-quadtree/src/size.js","../../../node_modules/d3-quadtree/src/visit.js","../../../node_modules/d3-quadtree/src/visitAfter.js","../../../node_modules/d3-dispatch/src/dispatch.js","../../../node_modules/d3-timer/src/timer.js","../../../node_modules/d3-force/src/lcg.js","../../../node_modules/d3-force/src/simulation.js","../src/Force.js","../../../node_modules/d3-force/src/center.js","../../../node_modules/d3-force/src/manyBody.js","../../../node_modules/d3-force/src/x.js","../../../node_modules/d3-force/src/y.js"],"sourcesContent":["export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import {Transform} from 'vega-dataflow';\nimport {\n  accessorFields, array, error, hasOwnProperty,\n  inherits, isFunction\n} from 'vega-util';\nimport {\n  forceCenter, forceCollide, forceLink,\n  forceManyBody, forceSimulation, forceX, forceY\n} from 'd3-force';\n\nconst ForceMap = {\n  center: forceCenter,\n  collide: forceCollide,\n  nbody: forceManyBody,\n  link: forceLink,\n  x: forceX,\n  y: forceY\n};\n\nconst Forces = 'forces',\n      ForceParams = [\n        'alpha', 'alphaMin', 'alphaTarget',\n        'velocityDecay', 'forces'\n      ],\n      ForceConfig = ['static', 'iterations'],\n      ForceOutput = ['x', 'y', 'vx', 'vy'];\n\n/**\n * Force simulation layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<object>} params.forces - The forces to apply.\n */\nexport default function Force(params) {\n  Transform.call(this, null, params);\n}\n\nForce.Definition = {\n  'type': 'Force',\n  'metadata': {'modifies': true},\n  'params': [\n    { 'name': 'static', 'type': 'boolean', 'default': false },\n    { 'name': 'restart', 'type': 'boolean', 'default': false },\n    { 'name': 'iterations', 'type': 'number', 'default': 300 },\n    { 'name': 'alpha', 'type': 'number', 'default': 1 },\n    { 'name': 'alphaMin', 'type': 'number', 'default': 0.001 },\n    { 'name': 'alphaTarget', 'type': 'number', 'default': 0 },\n    { 'name': 'velocityDecay', 'type': 'number', 'default': 0.4 },\n    { 'name': 'forces', 'type': 'param', 'array': true,\n      'params': [\n        {\n          'key': {'force': 'center'},\n          'params': [\n            { 'name': 'x', 'type': 'number', 'default': 0 },\n            { 'name': 'y', 'type': 'number', 'default': 0 }\n          ]\n        },\n        {\n          'key': {'force': 'collide'},\n          'params': [\n            { 'name': 'radius', 'type': 'number', 'expr': true },\n            { 'name': 'strength', 'type': 'number', 'default': 0.7 },\n            { 'name': 'iterations', 'type': 'number', 'default': 1 }\n          ]\n        },\n        {\n          'key': {'force': 'nbody'},\n          'params': [\n            { 'name': 'strength', 'type': 'number', 'default': -30 },\n            { 'name': 'theta', 'type': 'number', 'default': 0.9 },\n            { 'name': 'distanceMin', 'type': 'number', 'default': 1 },\n            { 'name': 'distanceMax', 'type': 'number' }\n          ]\n        },\n        {\n          'key': {'force': 'link'},\n          'params': [\n            { 'name': 'links', 'type': 'data' },\n            { 'name': 'id', 'type': 'field' },\n            { 'name': 'distance', 'type': 'number', 'default': 30, 'expr': true },\n            { 'name': 'strength', 'type': 'number', 'expr': true },\n            { 'name': 'iterations', 'type': 'number', 'default': 1 }\n          ]\n        },\n        {\n          'key': {'force': 'x'},\n          'params': [\n            { 'name': 'strength', 'type': 'number', 'default': 0.1 },\n            { 'name': 'x', 'type': 'field' }\n          ]\n        },\n        {\n          'key': {'force': 'y'},\n          'params': [\n            { 'name': 'strength', 'type': 'number', 'default': 0.1 },\n            { 'name': 'y', 'type': 'field' }\n          ]\n        }\n      ] },\n    {\n      'name': 'as', 'type': 'string', 'array': true, 'modify': false,\n      'default': ForceOutput\n    }\n  ]\n};\n\ninherits(Force, Transform, {\n  transform(_, pulse) {\n    var sim = this.value,\n        change = pulse.changed(pulse.ADD_REM),\n        params = _.modified(ForceParams),\n        iters = _.iterations || 300;\n\n    // configure simulation\n    if (!sim) {\n      this.value = sim = simulation(pulse.source, _);\n      sim.on('tick', rerun(pulse.dataflow, this));\n      if (!_.static) {\n        change = true;\n        sim.tick(); // ensure we run on init\n      }\n      pulse.modifies('index');\n    } else {\n      if (change) {\n        pulse.modifies('index');\n        sim.nodes(pulse.source);\n      }\n      if (params || pulse.changed(pulse.MOD)) {\n        setup(sim, _, 0, pulse);\n      }\n    }\n\n    // run simulation\n    if (params || change || _.modified(ForceConfig)\n        || (pulse.changed() && _.restart))\n    {\n      sim.alpha(Math.max(sim.alpha(), _.alpha || 1))\n        .alphaDecay(1 - Math.pow(sim.alphaMin(), 1 / iters));\n\n      if (_.static) {\n        for (sim.stop(); --iters >= 0;) sim.tick();\n      } else {\n        if (sim.stopped()) sim.restart();\n        if (!change) return pulse.StopPropagation; // defer to sim ticks\n      }\n    }\n\n    return this.finish(_, pulse);\n  },\n\n  finish(_, pulse) {\n    const dataflow = pulse.dataflow;\n\n    // inspect dependencies, touch link source data\n    for (let args=this._argops, j=0, m=args.length, arg; j<m; ++j) {\n      arg = args[j];\n      if (arg.name !== Forces || arg.op._argval.force !== 'link') {\n        continue;\n      }\n      for (var ops=arg.op._argops, i=0, n=ops.length, op; i<n; ++i) {\n        if (ops[i].name === 'links' && (op = ops[i].op.source)) {\n          dataflow.pulse(op, dataflow.changeset().reflow());\n          break;\n        }\n      }\n    }\n\n    // reflow all nodes\n    return pulse.reflow(_.modified()).modifies(ForceOutput);\n  }\n});\n\nfunction rerun(df, op) {\n  return () => df.touch(op).run();\n}\n\nfunction simulation(nodes, _) {\n  const sim = forceSimulation(nodes),\n        stop = sim.stop,\n        restart = sim.restart;\n  let stopped = false;\n\n  sim.stopped = () => stopped;\n  sim.restart = () => (stopped = false, restart());\n  sim.stop = () => (stopped = true, stop());\n\n  return setup(sim, _, true).on('end', () => stopped = true);\n}\n\nfunction setup(sim, _, init, pulse) {\n  var f = array(_.forces), i, n, p, name;\n\n  for (i=0, n=ForceParams.length; i<n; ++i) {\n    p = ForceParams[i];\n    if (p !== Forces && _.modified(p)) sim[p](_[p]);\n  }\n\n  for (i=0, n=f.length; i<n; ++i) {\n    name = Forces + i;\n    p = init || _.modified(Forces, i) ? getForce(f[i])\n      : pulse && modified(f[i], pulse) ? sim.force(name)\n      : null;\n    if (p) sim.force(name, p);\n  }\n\n  for (n=(sim.numForces || 0); i<n; ++i) {\n    sim.force(Forces + i, null); // remove\n  }\n\n  sim.numForces = f.length;\n  return sim;\n}\n\nfunction modified(f, pulse) {\n  var k, v;\n  for (k in f) {\n    if (isFunction(v = f[k]) && pulse.modified(accessorFields(v)))\n      return 1;\n  }\n  return 0;\n}\n\nfunction getForce(_) {\n  var f, p;\n\n  if (!hasOwnProperty(ForceMap, _.force)) {\n    error('Unrecognized force: ' + _.force);\n  }\n  f = ForceMap[_.force]();\n\n  for (p in _) {\n    if (isFunction(f[p])) setForceParam(f[p], _[p], _);\n  }\n\n  return f;\n}\n\nfunction setForceParam(f, v, _) {\n  f(isFunction(v) ? d => v(d, _) : v);\n}\n","export default function(x, y) {\n  var nodes, strength = 1;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  return force;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n"],"names":["add","tree","x","y","d","isNaN","parent","xm","ym","xp","yp","right","bottom","i","j","node","_root","leaf","data","x0","_x0","y0","_y0","x1","_x1","y1","_y1","length","_x","call","_y","next","Array","defaultX","defaultY","quadtree","nodes","Quadtree","NaN","addAll","undefined","leaf_copy","copy","treeProto","prototype","random","vx","vy","index","find","nodeById","nodeId","get","Error","child","this","source","target","pop","push","cover","n","xz","yz","Infinity","Math","floor","z","visit","extent","_","arguments","radius","x2","y2","q","x3","y3","quads","Quad","dx","dy","d2","sqrt","remove","retainer","previous","removeAll","root","size","callback","visitAfter","noop","value","dispatch","t","test","Dispatch","parseTypenames","typenames","types","trim","split","map","name","indexOf","slice","hasOwnProperty","type","c","set","concat","constructor","on","typename","T","that","args","apply","taskHead","taskTail","frame","timeout","interval","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","window","requestAnimationFrame","bind","f","setTimeout","clearNow","Timer","_call","_time","_next","timer","delay","time","restart","wake","e","timerFlush","t0","t2","t1","sleep","nap","poke","clearTimeout","clearInterval","setInterval","TypeError","stop","m","initialAngle","PI","simulation","alpha","alphaMin","alphaDecay","pow","alphaTarget","velocityDecay","forces","Map","stepper","step","event","s","lcg","tick","iterations","k","forEach","force","fx","fy","initializeNodes","angle","cos","sin","initializeForce","initialize","randomSource","delete","closest","ForceMap","center","strength","sx","sy","collide","radii","xi","yi","ri","ri2","prepare","quad","rj","r","l","jiggle","constant","_nodes","_random","nbody","strengths","distanceMin2","distanceMax2","theta2","accumulate","weight","abs","w","distanceMin","distanceMax","theta","link","links","distances","count","bias","id","min","distance","b","initializeStrength","initializeDistance","Forces","ForceParams","ForceConfig","ForceOutput","Force","params","Transform","setup","sim","init","pulse","p","array","modified","getForce","numForces","v","isFunction","accessorFields","error","setForceParam","Definition","transform","df","op","change","changed","ADD_REM","iters","modifies","MOD","forceSimulation","stopped","dataflow","touch","run","static","max","StopPropagation","finish","arg","_argops","_argval","ops","changeset","reflow"],"mappings":"0EAMA,SAASA,EAAIC,EAAMC,EAAGC,EAAGC,MACnBC,MAAMH,IAAMG,MAAMF,GAAI,OAAOF,MAE7BK,EAOAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAbAC,EAAOd,EAAKe,MACZC,EAAO,CAACC,KAAMd,GACde,EAAKlB,EAAKmB,IACVC,EAAKpB,EAAKqB,IACVC,EAAKtB,EAAKuB,IACVC,EAAKxB,EAAKyB,QAWTX,EAAM,OAAOd,EAAKe,MAAQC,EAAMhB,OAG9Bc,EAAKY,YACNhB,EAAQT,IAAMK,GAAMY,EAAKI,GAAM,IAAIJ,EAAKZ,EAASgB,EAAKhB,GACtDK,EAAST,IAAMK,GAAMa,EAAKI,GAAM,IAAIJ,EAAKb,EAASiB,EAAKjB,EACvDF,EAASS,IAAQA,EAAOA,EAAKF,EAAID,GAAU,EAAID,IAAS,OAAOL,EAAOO,GAAKI,EAAMhB,KAIvFQ,GAAMR,EAAK2B,GAAGC,KAAK,KAAMd,EAAKG,MAC9BR,GAAMT,EAAK6B,GAAGD,KAAK,KAAMd,EAAKG,MAC1BhB,IAAMO,GAAMN,IAAMO,EAAI,OAAOO,EAAKc,KAAOhB,EAAMT,EAASA,EAAOO,GAAKI,EAAOhB,EAAKe,MAAQC,EAAMhB,KAIhGK,EAASA,EAASA,EAAOO,GAAK,IAAImB,MAAM,GAAK/B,EAAKe,MAAQ,IAAIgB,MAAM,IAChErB,EAAQT,IAAMK,GAAMY,EAAKI,GAAM,IAAIJ,EAAKZ,EAASgB,EAAKhB,GACtDK,EAAST,IAAMK,GAAMa,EAAKI,GAAM,IAAIJ,EAAKb,EAASiB,EAAKjB,SACnDK,EAAID,GAAU,EAAID,KAAYG,GAAKJ,GAAMF,IAAO,EAAKC,GAAMF,WAC9DD,EAAOQ,GAAKC,EAAMT,EAAOO,GAAKI,EAAMhB,EC9C9B,WAASc,EAAMI,EAAIE,EAAIE,EAAIE,QACnCV,KAAOA,OACPI,GAAKA,OACLE,GAAKA,OACLE,GAAKA,OACLE,GAAKA,ECLL,SAASQ,EAAS7B,UAChBA,EAAE,GCDJ,SAAS8B,EAAS9B,UAChBA,EAAE,GCYI,SAAS+B,EAASC,EAAOlC,EAAGC,OACrCF,EAAO,IAAIoC,EAAc,MAALnC,EAAY+B,EAAW/B,EAAQ,MAALC,EAAY+B,EAAW/B,EAAGmC,IAAKA,IAAKA,IAAKA,YAC3E,MAATF,EAAgBnC,EAAOA,EAAKsC,OAAOH,GAG5C,SAASC,EAASnC,EAAGC,EAAGgB,EAAIE,EAAIE,EAAIE,QAC7BG,GAAK1B,OACL4B,GAAK3B,OACLiB,IAAMD,OACNG,IAAMD,OACNG,IAAMD,OACNG,IAAMD,OACNT,WAAQwB,EAGf,SAASC,EAAUxB,WACbyB,EAAO,CAACxB,KAAMD,EAAKC,MAAOa,EAAOW,EAC9BzB,EAAOA,EAAKc,MAAMA,EAAOA,EAAKA,KAAO,CAACb,KAAMD,EAAKC,aACjDwB,EAGT,IAAIC,EAAYR,EAASS,UAAYP,EAASO,UClC/B,WAAS1C,UACf,kBACEA,GCFI,WAAS2C,UACI,MAAlBA,IAAW,ICGrB,SAAS3C,EAAEE,UACFA,EAAEF,EAAIE,EAAE0C,GAGjB,SAAS3C,EAAEC,UACFA,EAAED,EAAIC,EAAE2C,GCNjB,SAASC,EAAM5C,UACNA,EAAE4C,MAGX,SAASC,EAAKC,EAAUC,OAClBpC,EAAOmC,EAASE,IAAID,OACnBpC,EAAM,MAAM,IAAIsC,MAAM,mBAAqBF,UACzCpC,EJ0BT4B,EAAUD,KAAO,eAGXN,EACAkB,EAHAZ,EAAO,IAAIL,EAASkB,KAAK3B,GAAI2B,KAAKzB,GAAIyB,KAAKnC,IAAKmC,KAAKjC,IAAKiC,KAAK/B,IAAK+B,KAAK7B,KACzEX,EAAOwC,KAAKvC,UAIXD,EAAM,OAAO2B,MAEb3B,EAAKY,OAAQ,OAAOe,EAAK1B,MAAQyB,EAAU1B,GAAO2B,MAEvDN,EAAQ,CAAC,CAACoB,OAAQzC,EAAM0C,OAAQf,EAAK1B,MAAQ,IAAIgB,MAAM,KAChDjB,EAAOqB,EAAMsB,WACb,IAAI7C,EAAI,EAAGA,EAAI,IAAKA,GACnByC,EAAQvC,EAAKyC,OAAO3C,MAClByC,EAAM3B,OAAQS,EAAMuB,KAAK,CAACH,OAAQF,EAAOG,OAAQ1C,EAAK0C,OAAO5C,GAAK,IAAImB,MAAM,KAC3EjB,EAAK0C,OAAO5C,GAAK4B,EAAUa,WAK/BZ,GAGTC,EAAU3C,IJ3DK,SAASI,SAChBF,GAAKqD,KAAK3B,GAAGC,KAAK,KAAMzB,GAC1BD,GAAKoD,KAAKzB,GAAGD,KAAK,KAAMzB,UACrBJ,EAAIuD,KAAKK,MAAM1D,EAAGC,GAAID,EAAGC,EAAGC,IIyDrCuC,EAAUJ,OJXH,SAAgBrB,OACjBd,EAAGS,EACHX,EACAC,EAFM0D,EAAI3C,EAAKS,OAGfmC,EAAK,IAAI9B,MAAM6B,GACfE,EAAK,IAAI/B,MAAM6B,GACf1C,EAAK6C,EAAAA,EACL3C,EAAK2C,EAAAA,EACLzC,GAAMyC,EAAAA,EACNvC,GAAMuC,EAAAA,MAGLnD,EAAI,EAAGA,EAAIgD,IAAKhD,EACfR,MAAMH,GAAKqD,KAAK3B,GAAGC,KAAK,KAAMzB,EAAIc,EAAKL,MAAQR,MAAMF,GAAKoD,KAAKzB,GAAGD,KAAK,KAAMzB,MACjF0D,EAAGjD,GAAKX,EACR6D,EAAGlD,GAAKV,EACJD,EAAIiB,IAAIA,EAAKjB,GACbA,EAAIqB,IAAIA,EAAKrB,GACbC,EAAIkB,IAAIA,EAAKlB,GACbA,EAAIsB,IAAIA,EAAKtB,OAIfgB,EAAKI,GAAMF,EAAKI,EAAI,OAAO8B,cAG1BK,MAAMzC,EAAIE,GAAIuC,MAAMrC,EAAIE,GAGxBZ,EAAI,EAAGA,EAAIgD,IAAKhD,EACnBb,EAAIuD,KAAMO,EAAGjD,GAAIkD,EAAGlD,GAAIK,EAAKL,WAGxB0C,MIrBTZ,EAAUiB,MK7DK,SAAS1D,EAAGC,MACrBE,MAAMH,GAAKA,IAAMG,MAAMF,GAAKA,GAAI,OAAOoD,SAEvCpC,EAAKoC,KAAKnC,IACVC,EAAKkC,KAAKjC,IACVC,EAAKgC,KAAK/B,IACVC,EAAK8B,KAAK7B,OAKVrB,MAAMc,GACRI,GAAMJ,EAAK8C,KAAKC,MAAMhE,IAAM,EAC5BuB,GAAMJ,EAAK4C,KAAKC,MAAM/D,IAAM,MAIzB,SAGCG,EACAO,EAHAsD,EAAI5C,EAAKJ,GAAM,EACfJ,EAAOwC,KAAKvC,MAITG,EAAKjB,GAAKA,GAAKqB,GAAMF,EAAKlB,GAAKA,GAAKsB,UACzCZ,GAAKV,EAAIkB,IAAO,EAAKnB,EAAIiB,GACzBb,EAAS,IAAI0B,MAAM,IAAWnB,GAAKE,EAAMA,EAAOT,EAAQ6D,GAAK,EACrDtD,QACD,EAAGU,EAAKJ,EAAKgD,EAAG1C,EAAKJ,EAAK8C,aAC1B,EAAGhD,EAAKI,EAAK4C,EAAG1C,EAAKJ,EAAK8C,aAC1B,EAAG5C,EAAKJ,EAAKgD,EAAG9C,EAAKI,EAAK0C,aAC1B,EAAGhD,EAAKI,EAAK4C,EAAG9C,EAAKI,EAAK0C,EAI/BZ,KAAKvC,OAASuC,KAAKvC,MAAMW,SAAQ4B,KAAKvC,MAAQD,eAG/CK,IAAMD,OACNG,IAAMD,OACNG,IAAMD,OACNG,IAAMD,EACJ8B,MLqBTZ,EAAUzB,KM9DK,eACTA,EAAO,eACNkD,OAAM,SAASrD,OACbA,EAAKY,OAAQ,GAAGT,EAAKyC,KAAK5C,EAAKG,YAAcH,EAAOA,EAAKgB,SAEzDb,GN0DTyB,EAAU0B,OO/DK,SAASC,UACfC,UAAU5C,OACX4B,KAAKK,OAAOU,EAAE,GAAG,IAAKA,EAAE,GAAG,IAAIV,OAAOU,EAAE,GAAG,IAAKA,EAAE,GAAG,IACrDjE,MAAMkD,KAAKnC,UAAOoB,EAAY,CAAC,CAACe,KAAKnC,IAAKmC,KAAKjC,KAAM,CAACiC,KAAK/B,IAAK+B,KAAK7B,OP6D7EiB,EAAUM,KQ9DK,SAAS/C,EAAGC,EAAGqE,OACxBtD,EAGAK,EACAE,EACAgD,EACAC,EAKAC,EACA9D,EAXAM,EAAKoC,KAAKnC,IACVC,EAAKkC,KAAKjC,IAKVsD,EAAKrB,KAAK/B,IACVqD,EAAKtB,KAAK7B,IACVoD,EAAQ,GACR/D,EAAOwC,KAAKvC,UAIZD,GAAM+D,EAAMnB,KAAK,IAAIoB,EAAKhE,EAAMI,EAAIE,EAAIuD,EAAIC,IAClC,MAAVL,EAAgBA,EAASR,EAAAA,GAE3B7C,EAAKjB,EAAIsE,EAAQnD,EAAKlB,EAAIqE,EAC1BI,EAAK1E,EAAIsE,EAAQK,EAAK1E,EAAIqE,EAC1BA,GAAUA,GAGLG,EAAIG,EAAMpB,cAGT3C,EAAO4D,EAAE5D,QACPQ,EAAKoD,EAAExD,IAAMyD,IACbnD,EAAKkD,EAAEtD,IAAMwD,IACbJ,EAAKE,EAAEpD,IAAMJ,IACbuD,EAAKC,EAAElD,IAAMJ,MAGjBN,EAAKY,OAAQ,KACXpB,GAAMgB,EAAKkD,GAAM,EACjBjE,GAAMiB,EAAKiD,GAAM,EAErBI,EAAMnB,KACJ,IAAIoB,EAAKhE,EAAK,GAAIR,EAAIC,EAAIiE,EAAIC,GAC9B,IAAIK,EAAKhE,EAAK,GAAIQ,EAAIf,EAAID,EAAImE,GAC9B,IAAIK,EAAKhE,EAAK,GAAIR,EAAIkB,EAAIgD,EAAIjE,GAC9B,IAAIuE,EAAKhE,EAAK,GAAIQ,EAAIE,EAAIlB,EAAIC,KAI5BK,GAAKV,GAAKK,IAAO,EAAKN,GAAKK,KAC7BoE,EAAIG,EAAMA,EAAMnD,OAAS,GACzBmD,EAAMA,EAAMnD,OAAS,GAAKmD,EAAMA,EAAMnD,OAAS,EAAId,GACnDiE,EAAMA,EAAMnD,OAAS,EAAId,GAAK8D,OAK7B,KACCK,EAAK9E,GAAKqD,KAAK3B,GAAGC,KAAK,KAAMd,EAAKG,MAClC+D,EAAK9E,GAAKoD,KAAKzB,GAAGD,KAAK,KAAMd,EAAKG,MAClCgE,EAAKF,EAAKA,EAAKC,EAAKA,KACpBC,EAAKV,EAAQ,KACXpE,EAAI6D,KAAKkB,KAAKX,EAASU,GAC3B/D,EAAKjB,EAAIE,EAAGiB,EAAKlB,EAAIC,EACrBwE,EAAK1E,EAAIE,EAAGyE,EAAK1E,EAAIC,EACrBc,EAAOH,EAAKG,aAKXA,GRHTyB,EAAUyC,OSjEK,SAAShF,MAClBC,MAAMH,GAAKqD,KAAK3B,GAAGC,KAAK,KAAMzB,KAAOC,MAAMF,GAAKoD,KAAKzB,GAAGD,KAAK,KAAMzB,IAAK,OAAOmD,SAE/EjD,EAEA+E,EACAC,EACAvD,EAKA7B,EACAC,EACAI,EACAC,EACAG,EACAC,EACAC,EACAC,EAfAC,EAAOwC,KAAKvC,MAIZG,EAAKoC,KAAKnC,IACVC,EAAKkC,KAAKjC,IACVC,EAAKgC,KAAK/B,IACVC,EAAK8B,KAAK7B,QAWTX,EAAM,OAAOwC,QAIdxC,EAAKY,OAAQ,OAAa,KACxBhB,EAAQT,IAAMK,GAAMY,EAAKI,GAAM,IAAIJ,EAAKZ,EAASgB,EAAKhB,GACtDK,EAAST,IAAMK,GAAMa,EAAKI,GAAM,IAAIJ,EAAKb,EAASiB,EAAKjB,EACrDF,EAASS,IAAMA,EAAOA,EAAKF,EAAID,GAAU,EAAID,IAAS,OAAO4C,SAC9DxC,EAAKY,OAAQ,OACdrB,EAAQO,EAAI,EAAK,IAAMP,EAAQO,EAAI,EAAK,IAAMP,EAAQO,EAAI,EAAK,MAAIwE,EAAW/E,EAAQQ,EAAID,QAIzFE,EAAKG,OAASd,MAASkF,EAAWvE,IAAMA,EAAOA,EAAKgB,MAAO,OAAOwB,YACrExB,EAAOhB,EAAKgB,cAAahB,EAAKgB,KAG9BuD,GAAkBvD,EAAOuD,EAASvD,KAAOA,SAAcuD,EAASvD,KAAOwB,MAGtEjD,GAGLyB,EAAOzB,EAAOO,GAAKkB,SAAczB,EAAOO,IAGnCE,EAAOT,EAAO,IAAMA,EAAO,IAAMA,EAAO,IAAMA,EAAO,KACnDS,KAAUT,EAAO,IAAMA,EAAO,IAAMA,EAAO,IAAMA,EAAO,MACvDS,EAAKY,SACP0D,EAAUA,EAASvE,GAAKC,EACvBwC,KAAKvC,MAAQD,GAGbwC,OAbaA,KAAKvC,MAAQe,EAAMwB,OTwBzCZ,EAAU4C,USRH,SAAmBrE,OACnB,IAAIL,EAAI,EAAGgD,EAAI3C,EAAKS,OAAQd,EAAIgD,IAAKhD,EAAG0C,KAAK6B,OAAOlE,EAAKL,WACvD0C,MTOTZ,EAAU6C,KUnEK,kBACNjC,KAAKvC,OVmEd2B,EAAU8C,KWpEK,eACTA,EAAO,cACNrB,OAAM,SAASrD,OACbA,EAAKY,OAAQ,KAAK8D,QAAa1E,EAAOA,EAAKgB,SAE3C0D,GXgET9C,EAAUyB,MYnEK,SAASsB,OACNf,EAAsBrB,EAAOnC,EAAIE,EAAIE,EAAIE,EAArDqD,EAAQ,GAAO/D,EAAOwC,KAAKvC,UAC3BD,GAAM+D,EAAMnB,KAAK,IAAIoB,EAAKhE,EAAMwC,KAAKnC,IAAKmC,KAAKjC,IAAKiC,KAAK/B,IAAK+B,KAAK7B,MAChEiD,EAAIG,EAAMpB,WACVgC,EAAS3E,EAAO4D,EAAE5D,KAAMI,EAAKwD,EAAExD,GAAIE,EAAKsD,EAAEtD,GAAIE,EAAKoD,EAAEpD,GAAIE,EAAKkD,EAAElD,KAAOV,EAAKY,OAAQ,KACnFpB,GAAMY,EAAKI,GAAM,EAAGf,GAAMa,EAAKI,GAAM,GACrC6B,EAAQvC,EAAK,KAAI+D,EAAMnB,KAAK,IAAIoB,EAAKzB,EAAO/C,EAAIC,EAAIe,EAAIE,KACxD6B,EAAQvC,EAAK,KAAI+D,EAAMnB,KAAK,IAAIoB,EAAKzB,EAAOnC,EAAIX,EAAID,EAAIkB,KACxD6B,EAAQvC,EAAK,KAAI+D,EAAMnB,KAAK,IAAIoB,EAAKzB,EAAO/C,EAAIc,EAAIE,EAAIf,KACxD8C,EAAQvC,EAAK,KAAI+D,EAAMnB,KAAK,IAAIoB,EAAKzB,EAAOnC,EAAIE,EAAId,EAAIC,WAGzD+C,MZwDTZ,EAAUgD,WapEK,SAASD,OACKf,EAAvBG,EAAQ,GAAI/C,EAAO,OACnBwB,KAAKvC,OAAO8D,EAAMnB,KAAK,IAAIoB,EAAKxB,KAAKvC,MAAOuC,KAAKnC,IAAKmC,KAAKjC,IAAKiC,KAAK/B,IAAK+B,KAAK7B,MAC5EiD,EAAIG,EAAMpB,OAAO,KAClB3C,EAAO4D,EAAE5D,QACTA,EAAKY,OAAQ,KACX2B,EAAOnC,EAAKwD,EAAExD,GAAIE,EAAKsD,EAAEtD,GAAIE,EAAKoD,EAAEpD,GAAIE,EAAKkD,EAAElD,GAAIlB,GAAMY,EAAKI,GAAM,EAAGf,GAAMa,EAAKI,GAAM,GACxF6B,EAAQvC,EAAK,KAAI+D,EAAMnB,KAAK,IAAIoB,EAAKzB,EAAOnC,EAAIE,EAAId,EAAIC,KACxD8C,EAAQvC,EAAK,KAAI+D,EAAMnB,KAAK,IAAIoB,EAAKzB,EAAO/C,EAAIc,EAAIE,EAAIf,KACxD8C,EAAQvC,EAAK,KAAI+D,EAAMnB,KAAK,IAAIoB,EAAKzB,EAAOnC,EAAIX,EAAID,EAAIkB,KACxD6B,EAAQvC,EAAK,KAAI+D,EAAMnB,KAAK,IAAIoB,EAAKzB,EAAO/C,EAAIC,EAAIe,EAAIE,IAE9DM,EAAK4B,KAAKgB,QAELA,EAAI5C,EAAK2B,OACdgC,EAASf,EAAE5D,KAAM4D,EAAExD,GAAIwD,EAAEtD,GAAIsD,EAAEpD,GAAIoD,EAAElD,WAEhC8B,MboDTZ,EAAUzC,EFnEK,SAASoE,UACfC,UAAU5C,QAAU4B,KAAK3B,GAAK0C,EAAGf,MAAQA,KAAK3B,IEmEvDe,EAAUxC,EDpEK,SAASmE,UACfC,UAAU5C,QAAU4B,KAAKzB,GAAKwC,EAAGf,MAAQA,KAAKzB,IeLvD,IAAI8D,EAAO,CAACC,MAAO,QAEnB,SAASC,QACF,IAAyCC,EAArClF,EAAI,EAAGgD,EAAIU,UAAU5C,OAAQ2C,EAAI,GAAOzD,EAAIgD,IAAKhD,EAAG,MACrDkF,EAAIxB,UAAU1D,GAAK,KAAQkF,KAAKzB,GAAM,QAAQ0B,KAAKD,GAAI,MAAM,IAAI1C,MAAM,iBAAmB0C,GAChGzB,EAAEyB,GAAK,UAEF,IAAIE,EAAS3B,GAGtB,SAAS2B,EAAS3B,QACXA,EAAIA,EAGX,SAAS4B,EAAeC,EAAWC,UAC1BD,EAAUE,OAAOC,MAAM,SAASC,KAAI,SAASR,OAC9CS,EAAO,GAAI3F,EAAIkF,EAAEU,QAAQ,QACzB5F,GAAK,IAAG2F,EAAOT,EAAEW,MAAM7F,EAAI,GAAIkF,EAAIA,EAAEW,MAAM,EAAG7F,IAC9CkF,IAAMK,EAAMO,eAAeZ,GAAI,MAAM,IAAI1C,MAAM,iBAAmB0C,SAC/D,CAACa,KAAMb,EAAGS,KAAMA,MA6C3B,SAASpD,EAAIwD,EAAMJ,OACZ,IAA4BK,EAAxBhG,EAAI,EAAGgD,EAAI+C,EAAKjF,OAAWd,EAAIgD,IAAKhD,MACtCgG,EAAID,EAAK/F,IAAI2F,OAASA,SAClBK,EAAEhB,MAKf,SAASiB,EAAIF,EAAMJ,EAAMd,OAClB,IAAI7E,EAAI,EAAGgD,EAAI+C,EAAKjF,OAAQd,EAAIgD,IAAKhD,KACpC+F,EAAK/F,GAAG2F,OAASA,EAAM,CACzBI,EAAK/F,GAAK+E,EAAMgB,EAAOA,EAAKF,MAAM,EAAG7F,GAAGkG,OAAOH,EAAKF,MAAM7F,EAAI,iBAIlD,MAAZ6E,GAAkBkB,EAAKjD,KAAK,CAAC6C,KAAMA,EAAMX,MAAOH,IAC7CkB,EAzDTX,EAASrD,UAAYkD,EAASlD,UAAY,CACxCoE,YAAaf,EACbgB,GAAI,SAASC,EAAUxB,OAGjBK,EAFAzB,EAAIf,KAAKe,EACT6C,EAAIjB,EAAegB,EAAW,GAAI5C,GAElCzD,GAAK,EACLgD,EAAIsD,EAAExF,YAGN4C,UAAU5C,OAAS,OAOP,MAAZ+D,GAAwC,mBAAbA,EAAyB,MAAM,IAAIrC,MAAM,qBAAuBqC,UACtF7E,EAAIgD,MACPkC,GAAKmB,EAAWC,EAAEtG,IAAI+F,KAAMtC,EAAEyB,GAAKe,EAAIxC,EAAEyB,GAAImB,EAASV,KAAMd,QAC3D,GAAgB,MAAZA,EAAkB,IAAKK,KAAKzB,EAAGA,EAAEyB,GAAKe,EAAIxC,EAAEyB,GAAImB,EAASV,KAAM,aAGnEjD,YAZI1C,EAAIgD,OAAQkC,GAAKmB,EAAWC,EAAEtG,IAAI+F,QAAUb,EAAI3C,EAAIkB,EAAEyB,GAAImB,EAASV,OAAQ,OAAOT,GAc/FrD,KAAM,eACAA,EAAO,GAAI4B,EAAIf,KAAKe,MACnB,IAAIyB,KAAKzB,EAAG5B,EAAKqD,GAAKzB,EAAEyB,GAAGW,eACzB,IAAIT,EAASvD,IAEtBb,KAAM,SAAS+E,EAAMQ,OACdvD,EAAIU,UAAU5C,OAAS,GAAK,EAAG,IAAK,IAAgCkC,EAAGkC,EAA/BsB,EAAO,IAAIrF,MAAM6B,GAAIhD,EAAI,EAASA,EAAIgD,IAAKhD,EAAGwG,EAAKxG,GAAK0D,UAAU1D,EAAI,OAC9G0C,KAAKe,EAAEqC,eAAeC,GAAO,MAAM,IAAIvD,MAAM,iBAAmBuD,OAC9C/F,EAAI,EAAGgD,GAAzBkC,EAAIxC,KAAKe,EAAEsC,IAAoBjF,OAAQd,EAAIgD,IAAKhD,EAAGkF,EAAElF,GAAGgF,MAAMyB,MAAMF,EAAMC,IAEjFC,MAAO,SAASV,EAAMQ,EAAMC,OACrB9D,KAAKe,EAAEqC,eAAeC,GAAO,MAAM,IAAIvD,MAAM,iBAAmBuD,OAChE,IAAIb,EAAIxC,KAAKe,EAAEsC,GAAO/F,EAAI,EAAGgD,EAAIkC,EAAEpE,OAAQd,EAAIgD,IAAKhD,EAAGkF,EAAElF,GAAGgF,MAAMyB,MAAMF,EAAMC,KC5DvF,IAIIE,EACAC,EALAC,EAAQ,EACRC,EAAU,EACVC,EAAW,EAIXC,EAAY,EACZC,EAAW,EACXC,EAAY,EACZC,EAA+B,iBAAhBC,aAA4BA,YAAYC,IAAMD,YAAcE,KAC3EC,EAA6B,iBAAXC,QAAuBA,OAAOC,sBAAwBD,OAAOC,sBAAsBC,KAAKF,QAAU,SAASG,GAAKC,WAAWD,EAAG,KAE7I,SAASN,WACPJ,IAAaM,EAASM,GAAWZ,EAAWE,EAAME,MAAQH,GAGnE,SAASW,IACPZ,EAAW,EAGN,SAASa,SACTC,MACLpF,KAAKqF,MACLrF,KAAKsF,MAAQ,KA0BR,SAASC,EAAMpD,EAAUqD,EAAOC,OACjCjD,EAAI,IAAI2C,SACZ3C,EAAEkD,QAAQvD,EAAUqD,EAAOC,GACpBjD,EAcT,SAASmD,IACPrB,GAAYD,EAAYG,EAAME,OAASH,EACvCL,EAAQC,EAAU,OAbb,WACLO,MACER,UACgB0B,EAAdpD,EAAIwB,EACDxB,IACAoD,EAAItB,EAAW9B,EAAE6C,QAAU,GAAG7C,EAAE4C,MAAM9G,KAAK,KAAMsH,GACtDpD,EAAIA,EAAE8C,QAENpB,EAOA2B,WAEA3B,EAAQ,EAWZ,eACM4B,EAAmBC,EAAfC,EAAKhC,EAAcyB,EAAOhF,EAAAA,OAC3BuF,GACDA,EAAGZ,OACDK,EAAOO,EAAGX,QAAOI,EAAOO,EAAGX,OAC/BS,EAAKE,EAAIA,EAAKA,EAAGV,QAEjBS,EAAKC,EAAGV,MAAOU,EAAGV,MAAQ,KAC1BU,EAAKF,EAAKA,EAAGR,MAAQS,EAAK/B,EAAW+B,GAGzC9B,EAAW6B,EACXG,EAAMR,GAtBJS,GACA5B,EAAW,GAIf,SAAS6B,QACHzB,EAAMF,EAAME,MAAOc,EAAQd,EAAML,EACjCmB,EA7EU,MA6ESjB,GAAaiB,EAAOnB,EAAYK,GAkBzD,SAASuB,EAAMR,GACTvB,IACAC,IAASA,EAAUiC,aAAajC,IACxBsB,EAAOnB,EACP,IACNmB,EAAOhF,EAAAA,IAAU0D,EAAUc,WAAWU,EAAMF,EAAOjB,EAAME,MAAQH,IACjEH,IAAUA,EAAWiC,cAAcjC,MAElCA,IAAUC,EAAYG,EAAME,MAAON,EAAWkC,YAAYH,EAvGnD,MAwGZjC,EAAQ,EAAGU,EAASe,KAjFxBR,EAAM9F,UAAYkG,EAAMlG,UAAY,CAClCoE,YAAa0B,EACbO,QAAS,SAASvD,EAAUqD,EAAOC,MACT,mBAAbtD,EAAyB,MAAM,IAAIoE,UAAU,8BACxDd,GAAgB,MAARA,EAAef,KAASe,IAAkB,MAATD,EAAgB,GAAKA,GACzDxF,KAAKsF,OAASrB,IAAajE,OAC1BiE,EAAUA,EAASqB,MAAQtF,KAC1BgE,EAAWhE,KAChBiE,EAAWjE,WAERoF,MAAQjD,OACRkD,MAAQI,EACbQ,KAEFO,KAAM,WACAxG,KAAKoF,aACFA,MAAQ,UACRC,MAAQ5E,EAAAA,EACbwF,OC3CN,MAEMQ,EAAI,WCCH,SAAS9J,EAAEE,UACTA,EAAEF,EAGJ,SAASC,EAAEC,UACTA,EAAED,EAGX,IACI8J,EAAehG,KAAKiG,IAAM,EAAIjG,KAAKkB,KAAK,IAE7B,WAAS/C,OAClB+H,EACAC,EAAQ,EACRC,EAAW,KACXC,EAAa,EAAIrG,KAAKsG,IAAIF,EAAU,EAAI,KACxCG,EAAc,EACdC,EAAgB,GAChBC,EAAS,IAAIC,IACbC,EAAU9B,EAAM+B,GAChBC,EAAQhF,EAAS,OAAQ,OACzBjD,EDpBS,eACTkI,EAAI,QACD,KAAOA,GANN,QAMeA,EALf,YAKwBf,GAAKA,ECkBxBgB,YAIJH,IACPI,IACAH,EAAMjJ,KAAK,OAAQsI,GACfC,EAAQC,IACVO,EAAQb,OACRe,EAAMjJ,KAAK,MAAOsI,aAIbc,EAAKC,OACRrK,EAAqBE,EAAlB8C,EAAIzB,EAAMT,YAEEa,IAAf0I,IAA0BA,EAAa,OAEtC,IAAIC,EAAI,EAAGA,EAAID,IAAcC,MAChCf,IAAUI,EAAcJ,GAASE,EAEjCI,EAAOU,SAAQ,SAASC,GACtBA,EAAMjB,MAGHvJ,EAAI,EAAGA,EAAIgD,IAAKhD,EAEJ,OADfE,EAAOqB,EAAMvB,IACJyK,GAAYvK,EAAKb,GAAKa,EAAK+B,IAAM2H,GACrC1J,EAAKb,EAAIa,EAAKuK,GAAIvK,EAAK+B,GAAK,GAClB,MAAX/B,EAAKwK,GAAYxK,EAAKZ,GAAKY,EAAKgC,IAAM0H,GACrC1J,EAAKZ,EAAIY,EAAKwK,GAAIxK,EAAKgC,GAAK,UAI9BoH,WAGAqB,QACF,IAA6BzK,EAAzBF,EAAI,EAAGgD,EAAIzB,EAAMT,OAAcd,EAAIgD,IAAKhD,EAAG,KAClDE,EAAOqB,EAAMvB,IAASmC,MAAQnC,EACf,MAAXE,EAAKuK,KAAYvK,EAAKb,EAAIa,EAAKuK,IACpB,MAAXvK,EAAKwK,KAAYxK,EAAKZ,EAAIY,EAAKwK,IAC/BlL,MAAMU,EAAKb,IAAMG,MAAMU,EAAKZ,GAAI,KAC9BqE,EAxDQ,GAwDiBP,KAAKkB,KAAK,GAAMtE,GAAI4K,EAAQ5K,EAAIoJ,EAC7DlJ,EAAKb,EAAIsE,EAASP,KAAKyH,IAAID,GAC3B1K,EAAKZ,EAAIqE,EAASP,KAAK0H,IAAIF,IAEzBpL,MAAMU,EAAK+B,KAAOzC,MAAMU,EAAKgC,OAC/BhC,EAAK+B,GAAK/B,EAAKgC,GAAK,aAKjB6I,EAAgBP,UACnBA,EAAMQ,YAAYR,EAAMQ,WAAWzJ,EAAOS,GACvCwI,SArDI,MAATjJ,IAAeA,EAAQ,IAwD3BoJ,IAEOrB,EAAa,CAClBc,KAAMA,EAENhC,QAAS,kBACA2B,EAAQ3B,QAAQ4B,GAAOV,GAGhCJ,KAAM,kBACGa,EAAQb,OAAQI,GAGzB/H,MAAO,SAASkC,UACPC,UAAU5C,QAAUS,EAAQkC,EAAGkH,IAAmBd,EAAOU,QAAQQ,GAAkBzB,GAAc/H,GAG1GgI,MAAO,SAAS9F,UACPC,UAAU5C,QAAUyI,GAAS9F,EAAG6F,GAAcC,GAGvDC,SAAU,SAAS/F,UACVC,UAAU5C,QAAU0I,GAAY/F,EAAG6F,GAAcE,GAG1DC,WAAY,SAAShG,UACZC,UAAU5C,QAAU2I,GAAchG,EAAG6F,IAAeG,GAG7DE,YAAa,SAASlG,UACbC,UAAU5C,QAAU6I,GAAelG,EAAG6F,GAAcK,GAG7DC,cAAe,SAASnG,UACfC,UAAU5C,QAAU8I,EAAgB,EAAInG,EAAG6F,GAAc,EAAIM,GAGtEqB,aAAc,SAASxH,UACdC,UAAU5C,QAAUkB,EAASyB,EAAGoG,EAAOU,QAAQQ,GAAkBzB,GAActH,GAGxFwI,MAAO,SAAS7E,EAAMlC,UACbC,UAAU5C,OAAS,GAAW,MAAL2C,EAAYoG,EAAOqB,OAAOvF,GAAQkE,EAAO5D,IAAIN,EAAMoF,EAAgBtH,IAAM6F,GAAcO,EAAOtH,IAAIoD,IAGpIvD,KAAM,SAAS/C,EAAGC,EAAGqE,OAGfQ,EACAC,EACAC,EACAnE,EACAiL,EANAnL,EAAI,EACJgD,EAAIzB,EAAMT,WAOA,MAAV6C,EAAgBA,EAASR,EAAAA,EACxBQ,GAAUA,EAEV3D,EAAI,EAAGA,EAAIgD,IAAKhD,GAInBqE,GAFAF,EAAK9E,GADLa,EAAOqB,EAAMvB,IACCX,GAEJ8E,GADVC,EAAK9E,EAAIY,EAAKZ,GACM8E,GACXT,IAAQwH,EAAUjL,EAAMyD,EAASU,UAGrC8G,GAGT/E,GAAI,SAAST,EAAMlC,UACVC,UAAU5C,OAAS,GAAKmJ,EAAM7D,GAAGT,EAAMlC,GAAI6F,GAAcW,EAAM7D,GAAGT,KC9I/E,MAAMyF,EAAW,CACfC,OCXa,SAAShM,EAAGC,OACrBiC,EAAO+J,EAAW,WAKbd,QACHxK,EAEAE,EADA8C,EAAIzB,EAAMT,OAEVyK,EAAK,EACLC,EAAK,MAEJxL,EAAI,EAAGA,EAAIgD,IAAKhD,EACFuL,IAAjBrL,EAAOqB,EAAMvB,IAAeX,EAAGmM,GAAMtL,EAAKZ,MAGvCiM,GAAMA,EAAKvI,EAAI3D,GAAKiM,EAAUE,GAAMA,EAAKxI,EAAI1D,GAAKgM,EAAUtL,EAAI,EAAGA,EAAIgD,IAAKhD,GAC/EE,EAAOqB,EAAMvB,IAASX,GAAKkM,EAAIrL,EAAKZ,GAAKkM,SAfpC,MAALnM,IAAWA,EAAI,GACV,MAALC,IAAWA,EAAI,GAkBnBkL,EAAMQ,WAAa,SAASvH,GAC1BlC,EAAQkC,GAGV+G,EAAMnL,EAAI,SAASoE,UACVC,UAAU5C,QAAUzB,GAAKoE,EAAG+G,GAASnL,GAG9CmL,EAAMlL,EAAI,SAASmE,UACVC,UAAU5C,QAAUxB,GAAKmE,EAAG+G,GAASlL,GAG9CkL,EAAMc,SAAW,SAAS7H,UACjBC,UAAU5C,QAAUwK,GAAY7H,EAAG+G,GAASc,GAG9Cd,GD1BPiB,QfAa,SAAS9H,OAClBpC,EACAmK,EACA1J,EACAsJ,EAAW,EACXjB,EAAa,WAIRG,YACHxK,EACAZ,EACAc,EACAyL,EACAC,EACAC,EACAC,EANG9I,EAAIzB,EAAMT,OAQRwJ,EAAI,EAAGA,EAAID,IAAcC,MAChClL,EAAOkC,EAASC,EAAOlC,EAAGC,GAAGwF,WAAWiH,GACnC/L,EAAI,EAAGA,EAAIgD,IAAKhD,EACnBE,EAAOqB,EAAMvB,GACb6L,EAAKH,EAAMxL,EAAKiC,OAAQ2J,EAAMD,EAAKA,EACnCF,EAAKzL,EAAKb,EAAIa,EAAK+B,GACnB2J,EAAK1L,EAAKZ,EAAIY,EAAKgC,GACnB9C,EAAKmE,MAAMkD,YAINA,EAAMuF,EAAM1L,EAAIE,EAAIE,EAAIE,OAC3BP,EAAO2L,EAAK3L,KAAM4L,EAAKD,EAAKE,EAAGA,EAAIL,EAAKI,MACxC5L,SAiBGC,EAAKqL,EAAKO,GAAKxL,EAAKiL,EAAKO,GAAK1L,EAAKoL,EAAKM,GAAKtL,EAAKgL,EAAKM,KAhBxD7L,EAAK8B,MAAQjC,EAAKiC,MAAO,KACvB9C,EAAIsM,EAAKtL,EAAKhB,EAAIgB,EAAK4B,GACvB3C,EAAIsM,EAAKvL,EAAKf,EAAIe,EAAK6B,GACvBiK,EAAI9M,EAAIA,EAAIC,EAAIA,EAChB6M,EAAID,EAAIA,IACA,IAAN7M,IAA6B8M,IAApB9M,EAAI+M,EAAOpK,IAAkB3C,GAChC,IAANC,IAA6B6M,IAApB7M,EAAI8M,EAAOpK,IAAkB1C,GAC1C6M,GAAKD,GAAKC,EAAI/I,KAAKkB,KAAK6H,KAAOA,EAAIb,EACnCpL,EAAK+B,KAAO5C,GAAK8M,IAAMD,GAAKD,GAAMA,IAAOH,EAAMG,IAC/C/L,EAAKgC,KAAO5C,GAAK6M,GAAKD,EACtB7L,EAAK4B,IAAM5C,GAAK6M,EAAI,EAAIA,GACxB7L,EAAK6B,IAAM5C,EAAI4M,cAShBH,EAAQC,MACXA,EAAK3L,KAAM,OAAO2L,EAAKE,EAAIR,EAAMM,EAAK3L,KAAK8B,WAC1C,IAAInC,EAAIgM,EAAKE,EAAI,EAAGlM,EAAI,IAAKA,EAC5BgM,EAAKhM,IAAMgM,EAAKhM,GAAGkM,EAAIF,EAAKE,IAC9BF,EAAKE,EAAIF,EAAKhM,GAAGkM,YAKdlB,OACFzJ,OACDvB,EAAqBE,EAAlB8C,EAAIzB,EAAMT,WACjB4K,EAAQ,IAAIvK,MAAM6B,GACbhD,EAAI,EAAGA,EAAIgD,IAAKhD,EAAGE,EAAOqB,EAAMvB,GAAI0L,EAAMxL,EAAKiC,QAAUwB,EAAOzD,EAAMF,EAAGuB,UA1D1D,mBAAXoC,IAAuBA,EAAS0I,EAAmB,MAAV1I,EAAiB,GAAKA,IA6D1E6G,EAAMQ,WAAa,SAASsB,EAAQC,GAClChL,EAAQ+K,EACRtK,EAASuK,EACTvB,KAGFR,EAAMH,WAAa,SAAS5G,UACnBC,UAAU5C,QAAUuJ,GAAc5G,EAAG+G,GAASH,GAGvDG,EAAMc,SAAW,SAAS7H,UACjBC,UAAU5C,QAAUwK,GAAY7H,EAAG+G,GAASc,GAGrDd,EAAM7G,OAAS,SAASF,UACfC,UAAU5C,QAAU6C,EAAsB,mBAANF,EAAmBA,EAAI4I,GAAU5I,GAAIuH,IAAcR,GAAS7G,GAGlG6G,GerFPgC,MERa,eACTjL,EACArB,EACA8B,EACAuH,EAEAkD,EADAnB,EAAWe,GAAU,IAErBK,EAAe,EACfC,EAAexJ,EAAAA,EACfyJ,EAAS,aAEJpC,EAAM/G,OACTzD,EAAGgD,EAAIzB,EAAMT,OAAQ1B,EAAOkC,EAASC,EAAOlC,EAAGC,GAAGwF,WAAW+H,OAC5DtD,EAAQ9F,EAAGzD,EAAI,EAAGA,EAAIgD,IAAKhD,EAAGE,EAAOqB,EAAMvB,GAAIZ,EAAKmE,MAAMkD,YAGxDuE,OACFzJ,OACDvB,EAAqBE,EAAlB8C,EAAIzB,EAAMT,WACjB2L,EAAY,IAAItL,MAAM6B,GACjBhD,EAAI,EAAGA,EAAIgD,IAAKhD,EAAGE,EAAOqB,EAAMvB,GAAIyM,EAAUvM,EAAKiC,QAAUmJ,EAASpL,EAAMF,EAAGuB,aAG7EsL,EAAWb,OACAlI,EAAGkC,EAAe3G,EAAGC,EAAGU,EAAtCsL,EAAW,EAASwB,EAAS,KAG7Bd,EAAKlL,OAAQ,KACVzB,EAAIC,EAAIU,EAAI,EAAGA,EAAI,IAAKA,GACtB8D,EAAIkI,EAAKhM,MAAQgG,EAAI5C,KAAK2J,IAAIjJ,EAAEkB,UACnCsG,GAAYxH,EAAEkB,MAAO8H,GAAU9G,EAAG3G,GAAK2G,EAAIlC,EAAEzE,EAAGC,GAAK0G,EAAIlC,EAAExE,GAG/D0M,EAAK3M,EAAIA,EAAIyN,EACbd,EAAK1M,EAAIA,EAAIwN,MAIV,EACHhJ,EAAIkI,GACF3M,EAAIyE,EAAEzD,KAAKhB,EACbyE,EAAExE,EAAIwE,EAAEzD,KAAKf,KACVgM,GAAYmB,EAAU3I,EAAEzD,KAAK8B,aACzB2B,EAAIA,EAAE5C,MAGf8K,EAAKhH,MAAQsG,WAGN7E,EAAMuF,EAAMtL,EAAI+C,EAAGG,OACrBoI,EAAKhH,MAAO,OAAO,MAEpB3F,EAAI2M,EAAK3M,EAAIa,EAAKb,EAClBC,EAAI0M,EAAK1M,EAAIY,EAAKZ,EAClB0N,EAAIpJ,EAAKlD,EACTyL,EAAI9M,EAAIA,EAAIC,EAAIA,KAIhB0N,EAAIA,EAAIJ,EAAST,SACfA,EAAIQ,IACI,IAANtN,IAA6B8M,IAApB9M,EAAI+M,EAAOpK,IAAkB3C,GAChC,IAANC,IAA6B6M,IAApB7M,EAAI8M,EAAOpK,IAAkB1C,GACtC6M,EAAIO,IAAcP,EAAI/I,KAAKkB,KAAKoI,EAAeP,IACnDjM,EAAK+B,IAAM5C,EAAI2M,EAAKhH,MAAQuE,EAAQ4C,EACpCjM,EAAKgC,IAAM5C,EAAI0M,EAAKhH,MAAQuE,EAAQ4C,IAE/B,EAIJ,KAAIH,EAAKlL,QAAUqL,GAAKQ,GAAxB,EAGDX,EAAK3L,OAASH,GAAQ8L,EAAK9K,QACnB,IAAN7B,IAA6B8M,IAApB9M,EAAI+M,EAAOpK,IAAkB3C,GAChC,IAANC,IAA6B6M,IAApB7M,EAAI8M,EAAOpK,IAAkB1C,GACtC6M,EAAIO,IAAcP,EAAI/I,KAAKkB,KAAKoI,EAAeP,QAG9CH,EAAK3L,OAASH,IACnB8M,EAAIP,EAAUT,EAAK3L,KAAK8B,OAASoH,EAAQ4C,EACzCjM,EAAK+B,IAAM5C,EAAI2N,EACf9M,EAAKgC,IAAM5C,EAAI0N,SACRhB,EAAOA,EAAK9K,cAGvBsJ,EAAMQ,WAAa,SAASsB,EAAQC,GAClChL,EAAQ+K,EACRtK,EAASuK,EACTvB,KAGFR,EAAMc,SAAW,SAAS7H,UACjBC,UAAU5C,QAAUwK,EAAwB,mBAAN7H,EAAmBA,EAAI4I,GAAU5I,GAAIuH,IAAcR,GAASc,GAG3Gd,EAAMyC,YAAc,SAASxJ,UACpBC,UAAU5C,QAAU4L,EAAejJ,EAAIA,EAAG+G,GAASpH,KAAKkB,KAAKoI,IAGtElC,EAAM0C,YAAc,SAASzJ,UACpBC,UAAU5C,QAAU6L,EAAelJ,EAAIA,EAAG+G,GAASpH,KAAKkB,KAAKqI,IAGtEnC,EAAM2C,MAAQ,SAAS1J,UACdC,UAAU5C,QAAU8L,EAASnJ,EAAIA,EAAG+G,GAASpH,KAAKkB,KAAKsI,IAGzDpC,GFpGP4C,KdDa,SAASC,OAGlBZ,EAEAa,EACA/L,EACAgM,EACAC,EACAxL,EARAyL,EAAKtL,EACLmJ,WAYqB8B,UAChB,EAAIhK,KAAKsK,IAAIH,EAAMH,EAAKzK,OAAOR,OAAQoL,EAAMH,EAAKxK,OAAOT,SAX9DwL,EAAWtB,EAAS,IAMpBhC,EAAa,WAQRG,EAAMjB,OACR,IAAIe,EAAI,EAAGtH,EAAIqK,EAAMvM,OAAQwJ,EAAID,IAAcC,MAC7C,IAAW8C,EAAMzK,EAAQC,EAAQvD,EAAGC,EAAG6M,EAAGyB,EAAtC5N,EAAI,EAAqCA,EAAIgD,IAAKhD,EACxC2C,GAAjByK,EAAOC,EAAMrN,IAAkB2C,OAC/BtD,GADuCuD,EAASwK,EAAKxK,QAC1CvD,EAAIuD,EAAOX,GAAKU,EAAOtD,EAAIsD,EAAOV,IAAMmK,EAAOpK,GAC1D1C,EAAIsD,EAAOtD,EAAIsD,EAAOV,GAAKS,EAAOrD,EAAIqD,EAAOT,IAAMkK,EAAOpK,GAG1D3C,GADA8M,IADAA,EAAI/I,KAAKkB,KAAKjF,EAAIA,EAAIC,EAAIA,IACjBgO,EAAUtN,IAAMmM,EAAI5C,EAAQkD,EAAUzM,GACvCV,GAAK6M,EACbvJ,EAAOX,IAAM5C,GAAKuO,EAAIJ,EAAKxN,IAC3B4C,EAAOV,IAAM5C,EAAIsO,EACjBjL,EAAOV,IAAM5C,GAAKuO,EAAI,EAAIA,GAC1BjL,EAAOT,IAAM5C,EAAIsO,WAKd5C,OACFzJ,OAEDvB,EAIAoN,EAHApK,EAAIzB,EAAMT,OACVqI,EAAIkE,EAAMvM,OACVuB,EAAW,IAAIyH,IAAIvI,EAAMmE,IAAI,CAACnG,EAAGS,IAAM,CAACyN,EAAGlO,EAAGS,EAAGuB,GAAQhC,SAGxDS,EAAI,EAAGuN,EAAQ,IAAIpM,MAAM6B,GAAIhD,EAAImJ,IAAKnJ,GACzCoN,EAAOC,EAAMrN,IAASmC,MAAQnC,EACH,iBAAhBoN,EAAKzK,SAAqByK,EAAKzK,OAASP,EAAKC,EAAU+K,EAAKzK,SAC5C,iBAAhByK,EAAKxK,SAAqBwK,EAAKxK,OAASR,EAAKC,EAAU+K,EAAKxK,SACvE2K,EAAMH,EAAKzK,OAAOR,QAAUoL,EAAMH,EAAKzK,OAAOR,QAAU,GAAK,EAC7DoL,EAAMH,EAAKxK,OAAOT,QAAUoL,EAAMH,EAAKxK,OAAOT,QAAU,GAAK,MAG1DnC,EAAI,EAAGwN,EAAO,IAAIrM,MAAMgI,GAAInJ,EAAImJ,IAAKnJ,EACxCoN,EAAOC,EAAMrN,GAAIwN,EAAKxN,GAAKuN,EAAMH,EAAKzK,OAAOR,QAAUoL,EAAMH,EAAKzK,OAAOR,OAASoL,EAAMH,EAAKxK,OAAOT,QAGtGsK,EAAY,IAAItL,MAAMgI,GAAI0E,IAC1BP,EAAY,IAAInM,MAAMgI,GAAI2E,cAGnBD,OACFtM,MAEA,IAAIvB,EAAI,EAAGgD,EAAIqK,EAAMvM,OAAQd,EAAIgD,IAAKhD,EACzCyM,EAAUzM,IAAMsL,EAAS+B,EAAMrN,GAAIA,EAAGqN,YAIjCS,OACFvM,MAEA,IAAIvB,EAAI,EAAGgD,EAAIqK,EAAMvM,OAAQd,EAAIgD,IAAKhD,EACzCsN,EAAUtN,IAAM2N,EAASN,EAAMrN,GAAIA,EAAGqN,UA5D7B,MAATA,IAAeA,EAAQ,IAgE3B7C,EAAMQ,WAAa,SAASsB,EAAQC,GAClChL,EAAQ+K,EACRtK,EAASuK,EACTvB,KAGFR,EAAM6C,MAAQ,SAAS5J,UACdC,UAAU5C,QAAUuM,EAAQ5J,EAAGuH,IAAcR,GAAS6C,GAG/D7C,EAAMiD,GAAK,SAAShK,UACXC,UAAU5C,QAAU2M,EAAKhK,EAAG+G,GAASiD,GAG9CjD,EAAMH,WAAa,SAAS5G,UACnBC,UAAU5C,QAAUuJ,GAAc5G,EAAG+G,GAASH,GAGvDG,EAAMc,SAAW,SAAS7H,UACjBC,UAAU5C,QAAUwK,EAAwB,mBAAN7H,EAAmBA,EAAI4I,GAAU5I,GAAIoK,IAAsBrD,GAASc,GAGnHd,EAAMmD,SAAW,SAASlK,UACjBC,UAAU5C,QAAU6M,EAAwB,mBAANlK,EAAmBA,EAAI4I,GAAU5I,GAAIqK,IAAsBtD,GAASmD,GAG5GnD,GcpGPnL,EGba,SAASA,OAElBkC,EACAkL,EACAxJ,EAHAqI,EAAWe,EAAS,aAOf7B,EAAMjB,OACR,IAA6BrJ,EAAzBF,EAAI,EAAGgD,EAAIzB,EAAMT,OAAcd,EAAIgD,IAAKhD,GAC/CE,EAAOqB,EAAMvB,IAASiC,KAAOgB,EAAGjD,GAAKE,EAAKb,GAAKoN,EAAUzM,GAAKuJ,WAIzDyB,OACFzJ,OACDvB,EAAGgD,EAAIzB,EAAMT,WACjB2L,EAAY,IAAItL,MAAM6B,GACtBC,EAAK,IAAI9B,MAAM6B,GACVhD,EAAI,EAAGA,EAAIgD,IAAKhD,EACnByM,EAAUzM,GAAKR,MAAMyD,EAAGjD,IAAMX,EAAEkC,EAAMvB,GAAIA,EAAGuB,IAAU,GAAK+J,EAAS/J,EAAMvB,GAAIA,EAAGuB,UAdrE,mBAANlC,IAAkBA,EAAIgN,EAAc,MAALhN,EAAY,GAAKA,IAkB3DmL,EAAMQ,WAAa,SAASvH,GAC1BlC,EAAQkC,EACRuH,KAGFR,EAAMc,SAAW,SAAS7H,UACjBC,UAAU5C,QAAUwK,EAAwB,mBAAN7H,EAAmBA,EAAI4I,GAAU5I,GAAIuH,IAAcR,GAASc,GAG3Gd,EAAMnL,EAAI,SAASoE,UACVC,UAAU5C,QAAUzB,EAAiB,mBAANoE,EAAmBA,EAAI4I,GAAU5I,GAAIuH,IAAcR,GAASnL,GAG7FmL,GHvBPlL,EIda,SAASA,OAElBiC,EACAkL,EACAvJ,EAHAoI,EAAWe,EAAS,aAOf7B,EAAMjB,OACR,IAA6BrJ,EAAzBF,EAAI,EAAGgD,EAAIzB,EAAMT,OAAcd,EAAIgD,IAAKhD,GAC/CE,EAAOqB,EAAMvB,IAASkC,KAAOgB,EAAGlD,GAAKE,EAAKZ,GAAKmN,EAAUzM,GAAKuJ,WAIzDyB,OACFzJ,OACDvB,EAAGgD,EAAIzB,EAAMT,WACjB2L,EAAY,IAAItL,MAAM6B,GACtBE,EAAK,IAAI/B,MAAM6B,GACVhD,EAAI,EAAGA,EAAIgD,IAAKhD,EACnByM,EAAUzM,GAAKR,MAAM0D,EAAGlD,IAAMV,EAAEiC,EAAMvB,GAAIA,EAAGuB,IAAU,GAAK+J,EAAS/J,EAAMvB,GAAIA,EAAGuB,UAdrE,mBAANjC,IAAkBA,EAAI+M,EAAc,MAAL/M,EAAY,GAAKA,IAkB3DkL,EAAMQ,WAAa,SAASvH,GAC1BlC,EAAQkC,EACRuH,KAGFR,EAAMc,SAAW,SAAS7H,UACjBC,UAAU5C,QAAUwK,EAAwB,mBAAN7H,EAAmBA,EAAI4I,GAAU5I,GAAIuH,IAAcR,GAASc,GAG3Gd,EAAMlL,EAAI,SAASmE,UACVC,UAAU5C,QAAUxB,EAAiB,mBAANmE,EAAmBA,EAAI4I,GAAU5I,GAAIuH,IAAcR,GAASlL,GAG7FkL,IJpBHuD,EAAS,SACTC,EAAc,CACZ,QAAS,WAAY,cACrB,gBAAiB,UAEnBC,EAAc,CAAC,SAAU,cACzBC,EAAc,CAAC,IAAK,IAAK,KAAM,MAQtB,SAASC,EAAMC,GAC5BC,YAAUrN,KAAK0B,KAAM,KAAM0L,GA2J7B,SAASE,EAAMC,EAAK9K,EAAG+K,EAAMC,OACFzO,EAAGgD,EAAG0L,EAAG/I,EAA9B+B,EAAIiH,QAAMlL,EAAEoG,YAEX7J,EAAE,EAAGgD,EAAEgL,EAAYlN,OAAQd,EAAEgD,IAAKhD,GACrC0O,EAAIV,EAAYhO,MACN+N,GAAUtK,EAAEmL,SAASF,IAAIH,EAAIG,GAAGjL,EAAEiL,QAGzC1O,EAAE,EAAGgD,EAAE0E,EAAE5G,OAAQd,EAAEgD,IAAKhD,EAC3B2F,EAAOoI,EAAS/N,GAChB0O,EAAIF,GAAQ/K,EAAEmL,SAASb,EAAQ/N,GAAK6O,EAASnH,EAAE1H,IAC3CyO,GAASG,EAASlH,EAAE1H,GAAIyO,GAASF,EAAI/D,MAAM7E,GAC3C,OACG4I,EAAI/D,MAAM7E,EAAM+I,OAGpB1L,EAAGuL,EAAIO,WAAa,EAAI9O,EAAEgD,IAAKhD,EAClCuO,EAAI/D,MAAMuD,EAAS/N,EAAG,aAGxBuO,EAAIO,UAAYpH,EAAE5G,OACXyN,EAGT,SAASK,EAASlH,EAAG+G,OACfnE,EAAGyE,MACFzE,KAAK5C,KACJsH,aAAWD,EAAIrH,EAAE4C,KAAOmE,EAAMG,SAASK,iBAAeF,IACxD,OAAO,SAEJ,EAGT,SAASF,EAASpL,OACZiE,EAAGgH,MAOFA,KALA5I,iBAAesF,EAAU3H,EAAE+G,QAC9B0E,QAAM,uBAAyBzL,EAAE+G,OAEnC9C,EAAI0D,EAAS3H,EAAE+G,SAEL/G,EACJuL,aAAWtH,EAAEgH,KAAKS,GAAczH,EAAEgH,GAAIjL,EAAEiL,GAAIjL,UAG3CiE,EAGT,SAASyH,GAAczH,EAAGqH,EAAGtL,GAC3BiE,EAAEsH,aAAWD,GAAKxP,GAAKwP,EAAExP,EAAGkE,GAAKsL,UAzMnCZ,EAAMiB,WAAa,MACT,iBACI,WAAa,UACf,CACR,MAAU,cAAkB,mBAAsB,GAClD,MAAU,eAAmB,mBAAsB,GACnD,MAAU,kBAAsB,iBAAqB,KACrD,MAAU,aAAiB,iBAAqB,GAChD,MAAU,gBAAoB,iBAAqB,MACnD,MAAU,mBAAuB,iBAAqB,GACtD,MAAU,qBAAyB,iBAAqB,IACxD,MAAU,cAAkB,eAAkB,SAClC,CACR,KACS,OAAU,iBACP,CACR,MAAU,SAAa,iBAAqB,GAC5C,MAAU,SAAa,iBAAqB,KAGhD,KACS,OAAU,kBACP,CACR,MAAU,cAAkB,eAAkB,GAC9C,MAAU,gBAAoB,iBAAqB,IACnD,MAAU,kBAAsB,iBAAqB,KAGzD,KACS,OAAU,gBACP,CACR,MAAU,gBAAoB,kBAAsB,IACpD,MAAU,aAAiB,iBAAqB,IAChD,MAAU,mBAAuB,iBAAqB,GACtD,MAAU,mBAAuB,YAGrC,KACS,OAAU,eACP,CACR,MAAU,aAAiB,QAC3B,MAAU,UAAc,SACxB,MAAU,gBAAoB,iBAAqB,SAAY,GAC/D,MAAU,gBAAoB,eAAkB,GAChD,MAAU,kBAAsB,iBAAqB,KAGzD,KACS,OAAU,YACP,CACR,MAAU,gBAAoB,iBAAqB,IACnD,MAAU,SAAa,WAG3B,KACS,OAAU,YACP,CACR,MAAU,gBAAoB,iBAAqB,IACnD,MAAU,SAAa,aAI/B,MACU,UAAc,gBAAmB,UAAgB,UAC9ClB,gBAKRC,EAAOE,YAAW,CACzBgB,UAAU5L,EAAGgL,OAiEAa,EAAIC,EAhEXhB,EAAM7L,KAAKsC,MACXwK,EAASf,EAAMgB,QAAQhB,EAAMiB,SAC7BtB,EAAS3K,EAAEmL,SAASZ,GACpB2B,EAAQlM,EAAE4G,YAAc,OAGvBkE,GASCiB,IACFf,EAAMmB,SAAS,SACfrB,EAAIhN,MAAMkN,EAAM9L,UAEdyL,GAAUK,EAAMgB,QAAQhB,EAAMoB,OAChCvB,EAAMC,EAAK9K,EAAG,EAAGgL,UAbdzJ,MAAQuJ,EA6DnB,SAAoBhN,EAAOkC,SACnB8K,EAAMuB,EAAgBvO,GACtB2H,EAAOqF,EAAIrF,KACXd,EAAUmG,EAAInG,YAChB2H,GAAU,SAEdxB,EAAIwB,QAAU,IAAMA,EACpBxB,EAAInG,QAAU,KAAO2H,GAAU,EAAO3H,KACtCmG,EAAIrF,KAAO,KAAO6G,GAAU,EAAM7G,KAE3BoF,EAAMC,EAAK9K,GAAG,GAAM2C,GAAG,MAAO,IAAM2J,GAAU,GAvE9BzG,CAAWmF,EAAM9L,OAAQc,GAC5C8K,EAAInI,GAAG,QAwDEkJ,EAxDYb,EAAMuB,SAwDdT,EAxDwB7M,KAyDlC,IAAM4M,EAAGW,MAAMV,GAAIW,QAxDjBzM,EAAE0M,SACLX,GAAS,EACTjB,EAAInE,QAENqE,EAAMmB,SAAS,UAYbxB,GAAUoB,GAAU/L,EAAEmL,SAASX,IAC3BQ,EAAMgB,WAAahM,EAAE2E,WAE3BmG,EAAIhF,MAAMnG,KAAKgN,IAAI7B,EAAIhF,QAAS9F,EAAE8F,OAAS,IACxCE,WAAW,EAAIrG,KAAKsG,IAAI6E,EAAI/E,WAAY,EAAImG,IAE3ClM,EAAE0M,WACC5B,EAAIrF,SAAUyG,GAAS,GAAIpB,EAAInE,eAEhCmE,EAAIwB,WAAWxB,EAAInG,WAClBoH,EAAQ,OAAOf,EAAM4B,uBAIvB3N,KAAK4N,OAAO7M,EAAGgL,IAGxB6B,OAAO7M,EAAGgL,SACFuB,EAAWvB,EAAMuB,aAGlB,IAA2CO,EAAvC/J,EAAK9D,KAAK8N,QAASvQ,EAAE,EAAGkJ,EAAE3C,EAAK1F,OAAab,EAAEkJ,IAAKlJ,KAC1DsQ,EAAM/J,EAAKvG,GACPsQ,EAAI5K,OAASoI,GAAmC,SAAzBwC,EAAIhB,GAAGkB,QAAQjG,UAGrC,IAA2C+E,EAAvCmB,EAAIH,EAAIhB,GAAGiB,QAASxQ,EAAE,EAAGgD,EAAE0N,EAAI5P,OAAYd,EAAEgD,IAAKhD,KACrC,UAAhB0Q,EAAI1Q,GAAG2F,OAAqB4J,EAAKmB,EAAI1Q,GAAGuP,GAAG5M,QAAS,CACtDqN,EAASvB,MAAMc,EAAIS,EAASW,YAAYC,uBAOvCnC,EAAMmC,OAAOnN,EAAEmL,YAAYgB,SAAS1B"}