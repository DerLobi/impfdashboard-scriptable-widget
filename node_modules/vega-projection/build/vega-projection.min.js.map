{"version":3,"file":"vega-projection.min.js","sources":["../../../node_modules/d3-array/src/fsum.js","../../../node_modules/d3-array/src/merge.js","../../../node_modules/d3-geo/src/math.js","../../../node_modules/d3-geo/src/noop.js","../../../node_modules/d3-geo/src/stream.js","../../../node_modules/d3-geo/src/cartesian.js","../../../node_modules/d3-geo/src/compose.js","../../../node_modules/d3-geo/src/rotation.js","../../../node_modules/d3-geo/src/circle.js","../../../node_modules/d3-geo/src/clip/buffer.js","../../../node_modules/d3-geo/src/pointEqual.js","../../../node_modules/d3-geo/src/clip/rejoin.js","../../../node_modules/d3-geo/src/polygonContains.js","../../../node_modules/d3-geo/src/clip/index.js","../../../node_modules/d3-geo/src/clip/antimeridian.js","../../../node_modules/d3-geo/src/clip/circle.js","../../../node_modules/d3-geo/src/clip/rectangle.js","../../../node_modules/d3-geo/src/clip/line.js","../../../node_modules/d3-geo/src/path/area.js","../../../node_modules/d3-geo/src/identity.js","../../../node_modules/d3-geo/src/path/bounds.js","../../../node_modules/d3-geo/src/path/centroid.js","../../../node_modules/d3-geo/src/path/context.js","../../../node_modules/d3-geo/src/path/measure.js","../../../node_modules/d3-geo/src/path/string.js","../../../node_modules/d3-geo/src/path/index.js","../../../node_modules/d3-geo/src/transform.js","../../../node_modules/d3-geo/src/projection/fit.js","../../../node_modules/d3-geo/src/projection/resample.js","../../../node_modules/d3-geo/src/projection/index.js","../../../node_modules/d3-geo/src/projection/conic.js","../../../node_modules/d3-geo/src/projection/conicEqualArea.js","../../../node_modules/d3-geo/src/projection/cylindricalEqualArea.js","../../../node_modules/d3-geo/src/projection/albers.js","../../../node_modules/d3-geo/src/projection/azimuthal.js","../../../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","../../../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","../../../node_modules/d3-geo/src/projection/mercator.js","../../../node_modules/d3-geo/src/projection/conicConformal.js","../../../node_modules/d3-geo/src/projection/equirectangular.js","../../../node_modules/d3-geo/src/projection/conicEquidistant.js","../../../node_modules/d3-geo/src/projection/equalEarth.js","../../../node_modules/d3-geo/src/projection/gnomonic.js","../../../node_modules/d3-geo/src/projection/naturalEarth1.js","../../../node_modules/d3-geo/src/projection/orthographic.js","../../../node_modules/d3-geo/src/projection/stereographic.js","../../../node_modules/d3-geo/src/projection/transverseMercator.js","../../../node_modules/d3-geo-projection/src/math.js","../../../node_modules/d3-geo-projection/src/mollweide.js","../src/projections.js","../../../node_modules/d3-geo/src/projection/albersUsa.js","../../../node_modules/d3-geo/src/projection/identity.js"],"sourcesContent":["// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport default function(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi)\n    return point[0];\n  else\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","export default x => x;\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {degrees, pi, radians} from \"../math.js\";\nimport {projectionMutator} from \"./index.js\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import conicEqualArea from \"./conicEqualArea.js\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n        if (k === Infinity) return [2, 0];\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pi, pow, sign, sin, sqrt, tan} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {mercatorRaw} from \"./mercator.js\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),\n      l = atan2(x, abs(fy)) * sign(fy);\n    if (fy * n < 0)\n      l -= pi * sign(x) * sign(fy);\n    return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import projection from \"./index.js\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {equirectangularRaw} from \"./equirectangular.js\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y,\n        l = atan2(x, abs(gy)) * sign(gy);\n    if (gy * n < 0)\n      l -= pi * sign(x) * sign(gy);\n    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import projection from \"./index.js\";\nimport {abs, epsilon} from \"../math.js\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math.js\";\nimport {mercatorProjection} from \"./mercator.js\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","export var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var ceil = Math.ceil;\nexport var cos = Math.cos;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var pow = Math.pow;\nexport var round = Math.round;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sin = Math.sin;\nexport var tan = Math.tan;\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var sqrt1_2 = Math.SQRT1_2;\nexport var sqrt2 = sqrt(2);\nexport var sqrtPi = sqrt(pi);\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport function sinci(x) {\n  return x ? x / Math.sin(x) : 1;\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function sqrt(x) {\n  return x > 0 ? Math.sqrt(x) : 0;\n}\n\nexport function tanh(x) {\n  x = exp(2 * x);\n  return (x - 1) / (x + 1);\n}\n\nexport function sinh(x) {\n  return (exp(x) - exp(-x)) / 2;\n}\n\nexport function cosh(x) {\n  return (exp(x) + exp(-x)) / 2;\n}\n\nexport function arsinh(x) {\n  return log(x + sqrt(x * x + 1));\n}\n\nexport function arcosh(x) {\n  return log(x + sqrt(x * x - 1));\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt2} from \"./math.js\";\n\nexport function mollweideBromleyTheta(cp, phi) {\n  var cpsinPhi = cp * sin(phi), i = 30, delta;\n  do phi -= delta = (phi + sin(phi) - cpsinPhi) / (1 + cos(phi));\n  while (abs(delta) > epsilon && --i > 0);\n  return phi / 2;\n}\n\nexport function mollweideBromleyRaw(cx, cy, cp) {\n\n  function forward(lambda, phi) {\n    return [cx * lambda * cos(phi = mollweideBromleyTheta(cp, phi)), cy * sin(phi)];\n  }\n\n  forward.invert = function(x, y) {\n    return y = asin(y / cy), [x / (cx * cos(y)), asin((2 * y + sin(2 * y)) / cp)];\n  };\n\n  return forward;\n}\n\nexport var mollweideRaw = mollweideBromleyRaw(sqrt2 / halfPi, sqrt2, pi);\n\nexport default function() {\n  return projection(mollweideRaw)\n      .scale(169.529);\n}\n","import {\n  geoAlbers,\n  geoAlbersUsa,\n  geoAzimuthalEqualArea,\n  geoAzimuthalEquidistant,\n  geoConicConformal,\n  geoConicEqualArea,\n  geoConicEquidistant,\n  geoEqualEarth,\n  geoEquirectangular,\n  geoGnomonic,\n  geoIdentity,\n  geoMercator,\n  geoNaturalEarth1,\n  geoOrthographic,\n  geoPath,\n  geoStereographic,\n  geoTransverseMercator\n} from 'd3-geo';\n\nimport {\n  geoMollweide\n} from 'd3-geo-projection';\n\nconst defaultPath = geoPath();\n\nexport const projectionProperties = [\n  // standard properties in d3-geo\n  'clipAngle',\n  'clipExtent',\n  'scale',\n  'translate',\n  'center',\n  'rotate',\n  'parallels',\n  'precision',\n  'reflectX',\n  'reflectY',\n\n  // extended properties in d3-geo-projections\n  'coefficient',\n  'distance',\n  'fraction',\n  'lobes',\n  'parallel',\n  'radius',\n  'ratio',\n  'spacing',\n  'tilt'\n];\n\n/**\n * Augment projections with their type and a copy method.\n */\nfunction create(type, constructor) {\n  return function projection() {\n    const p = constructor();\n\n    p.type = type;\n\n    p.path = geoPath().projection(p);\n\n    p.copy = p.copy || function() {\n      const c = projection();\n      projectionProperties.forEach(prop => {\n        if (p[prop]) c[prop](p[prop]());\n      });\n      c.path.pointRadius(p.path.pointRadius());\n      return c;\n    };\n\n    return p;\n  };\n}\n\nexport function projection(type, proj) {\n  if (!type || typeof type !== 'string') {\n    throw new Error('Projection type must be a name string.');\n  }\n  type = type.toLowerCase();\n  if (arguments.length > 1) {\n    projections[type] = create(type, proj);\n    return this;\n  } else {\n    return projections[type] || null;\n  }\n}\n\nexport function getProjectionPath(proj) {\n  return (proj && proj.path) || defaultPath;\n}\n\nconst projections = {\n  // base d3-geo projection types\n  albers:               geoAlbers,\n  albersusa:            geoAlbersUsa,\n  azimuthalequalarea:   geoAzimuthalEqualArea,\n  azimuthalequidistant: geoAzimuthalEquidistant,\n  conicconformal:       geoConicConformal,\n  conicequalarea:       geoConicEqualArea,\n  conicequidistant:     geoConicEquidistant,\n  equalEarth:           geoEqualEarth,\n  equirectangular:      geoEquirectangular,\n  gnomonic:             geoGnomonic,\n  identity:             geoIdentity,\n  mercator:             geoMercator,\n  mollweide:            geoMollweide,\n  naturalEarth1:        geoNaturalEarth1,\n  orthographic:         geoOrthographic,\n  stereographic:        geoStereographic,\n  transversemercator:   geoTransverseMercator\n};\n\nfor (const key in projections) {\n  projection(key, projections[key]);\n}\n","import {epsilon} from \"../math.js\";\nimport albers from \"./albers.js\";\nimport conicEqualArea from \"./conicEqualArea.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import clipRectangle from \"../clip/rectangle.js\";\nimport identity from \"../identity.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport {cos, degrees, radians, sin} from \"../math.js\";\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect\n      alpha = 0, ca, sa, // angle\n      x0 = null, y0, x1, y1, // clip extent\n      kx = 1, ky = 1,\n      transform = transformer({\n        point: function(x, y) {\n          var p = projection([x, y])\n          this.stream.point(p[0], p[1]);\n        }\n      }),\n      postclip = identity,\n      cache,\n      cacheStream;\n\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  function projection (p) {\n    var x = p[0] * kx, y = p[1] * ky;\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }    \n    return [x + tx, y + ty];\n  }\n  projection.invert = function(p) {\n    var x = p[0] - tx, y = p[1] - ty;\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n    return [x / kx, y / ky];\n  };\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n  projection.translate = function(_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  }\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\n  };\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  return projection;\n}\n"],"names":["Adder","constructor","_partials","Float64Array","_n","add","x","p","this","i","j","y","hi","lo","Math","abs","valueOf","n","merge","arrays","Array","from","array","flatten","epsilon","pi","PI","halfPi","quarterPi","tau","degrees","radians","atan","atan2","cos","exp","log","pow","sin","sign","sqrt","tan","acos","asin","noop","streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","type","streamObjectType","Feature","object","FeatureCollection","features","length","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","spherical","cartesian","lambda","phi","cosPhi","cartesianDot","a","b","cartesianCross","cartesianAddInPlace","cartesianScale","vector","k","cartesianNormalizeInPlace","d","l","compose","invert","rotationIdentity","round","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","z","circleRadius","cosRadius","radius","line","lines","m","push","rejoin","pop","concat","shift","result","Intersection","points","other","entry","o","e","v","segments","compareIntersection","startInside","interpolate","subject","clip","forEach","segment","p0","p1","pointEqual","sort","link","start","current","isSubject","longitude","pointVisible","clipLine","sink","polygon","ring","ringBuffer","clipBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","sinPhi","normal","angle","winding","sum","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","point1","phi1","delta","absDelta","antimeridian","arc","intersection","phiArc","polygonContains","clipRejoin","pointLine","clean","ringSegments","filter","validSegment","NaN","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","to","direction","cr","smallRadius","notHemisphere","visible","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","u","w","uu","t2","t","q","polar","q1","code","r","c0","v0","v00","point2","c","t0","t1","sinRadius","step","circleStream","clipMax","clipMin","clipRectangle","x0","y0","x1","y1","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","a0","b0","b1","polygonInside","cleanInside","max","min","ax","ay","dx","dy","x00","y00","areaSum","areaRingSum","areaStream","areaRingStart","areaRingEnd","area","areaPointFirst","areaPoint","Infinity","boundsStream","bounds","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","context","_context","prototype","_radius","pointRadius","_","_line","_point","closePath","moveTo","lineTo","lengthRing","lengthSum","lengthStream","lengthPointFirst","lengthPoint","PathString","_string","circle","projection","projectionStream","contextStream","path","apply","arguments","pathArea","measure","pathMeasure","pathBounds","pathCentroid","identity","transformer","methods","s","TransformStream","key","fit","fitBounds","clipExtent","scale","translate","geoStream","fitExtent","extent","h","fitSize","size","fitWidth","width","fitHeight","height","_circle","join","cosMinDistance","project","delta2","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","a00","b00","c00","resampleStream","ringPoint","resample","resampleNone","transformRadians","scaleTranslateRotate","sx","sy","alpha","transform","scaleTranslate","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","rotate","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","recenter","center","reset","transformRotate","undefined","clipAngle","clipCircle","reflectX","reflectY","precision","conicProjection","parallels","conicEqualAreaRaw","sy0","forward","cylindricalEqualAreaRaw","r0","r0y","conicEqualArea","azimuthalRaw","cx","cy","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","mercatorProjection","reclip","tany","conicConformalRaw","cy0","f","fy","equirectangularRaw","conicEquidistantRaw","g","gy","nx","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","gnomonicRaw","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","sqrt2","mollweideBromleyTheta","cp","cpsinPhi","mollweideRaw","mollweideBromleyRaw","defaultPath","geoPath","projectionProperties","create","copy","prop","proj","Error","toLowerCase","projections","albers","geoAlbers","albersusa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","azimuthalequalarea","azimuthalequidistant","conicconformal","conicequalarea","geoConicEqualArea","conicequidistant","equalEarth","equirectangular","gnomonic","sa","tx","ty","kx","ky","mercator","mollweide","naturalEarth1","orthographic","stereographic","transversemercator"],"mappings":"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"}